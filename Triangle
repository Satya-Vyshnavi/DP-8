T.c --> O(mn)
S.c --> O(1)

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();
       for(int i = n-2; i >=0; i--){
         for(int j = 0; j<triangle.get(i).size(); j++){
             triangle.get(i).set(j,triangle.get(i).get(j)+ Math.min(triangle.get(i+1).get(j),
             triangle.get(i+1).get(j+1)));
         }
       } 
       return triangle.get(0).get(0); 
    }
}
**********************************************************************************************************
T.c --> O(mn)
S.c --> O(1)

class Solution {
    public int minimumTotal(List<List<Integer>> triangle) {
        int n = triangle.size();
       for(int i = 1; i<triangle.size(); i++){
        for(int j = 0; j<triangle.get(i).size(); j++){
            if(j == 0){
               triangle.get(i).set(j,triangle.get(i).get(j)+triangle.get(i-1).get(j));
            }else if(j == triangle.get(i).size()-1){
               triangle.get(i).set(j,triangle.get(i).get(j)+triangle.get(i-1).get(j-1));
            }else{
               triangle.get(i).set(j,triangle.get(i).get(j)+Math.min(triangle.get(i-1).get(j),
               triangle.get(i-1).get(j-1)));
            }
        }
       }
       int min = Integer.MAX_VALUE;
       for(int i =0; i<triangle.get(n-1).size(); i++){
        min = Math.min(triangle.get(n-1).get(i),min);
       }
       return min;
    }
}